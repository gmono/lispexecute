declare type ToDouble<s extends any[]> = s extends [] ? [] : s extends [infer a] ? [[a]] : s extends [infer a, infer b, ...infer rest] ? (rest extends [] ? [[a, b]] : [
    [a, b],
    ...ToDouble<rest>
]) : never;
export declare type Tree<s extends any[]> = s extends [] ? [] : ToDouble<s> extends [s] ? s : Tree<ToDouble<s>>;
export declare type Flatten<a extends any[]> = a extends [] ? [] : a extends [infer a] ? a extends any[] ? Flatten<a> : [a] : a extends [infer left, infer right] ? (left extends any[] ? right extends any[] ? [
    ...Flatten<left>,
    ...Flatten<right>
] : [left, right] : [left, right]) : never;
export {};
